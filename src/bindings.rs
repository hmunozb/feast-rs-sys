/* automatically generated by rust-bindgen */
/* Refactors:
 * use std::os::raw:: c_int and c_char
 * All of the following changes from *mut ptr, which are used only as input parameters:
 *      N: *const c_int 
 *      UPLO: *const c_char
 *      LDA: *const c_int
 *      LDB: *const c_int
 *      A: *const f64
 *      B: *const f64
 *
*/
#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]

use std::os::raw::{c_int, c_char};

extern "C" {
    #[doc = ""]
    pub fn feastinit_(fpm: *mut c_int);
}
extern "C" {
    pub fn feastinit_driver_(fpm: *mut c_int, N: *const c_int);
}
extern "C" {
    pub fn cfeast_customcontour_(
        fpm2: *mut c_int,
        N: *const c_int,
        Nedge: *mut c_int,
        Tedge: *mut c_int,
        Zedge: *mut f32,
        Zne: *mut f32,
        Wne: *mut f32,
    );
}
extern "C" {
    pub fn zfeast_customcontour_(
        fpm2: *mut c_int,
        N: *const c_int,
        Nedge: *mut c_int,
        Tedge: *mut c_int,
        Zedge: *mut f64,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_contour_(
        Emin: *mut f64,
        Emax: *mut f64,
        fpm2: *mut c_int,
        fpm16: *mut c_int,
        fpm18: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn cfeast_contour_(
        Emin: *mut f32,
        Emax: *mut f32,
        fpm2: *mut c_int,
        fpm16: *mut c_int,
        fpm18: *mut c_int,
        Zne: *mut f32,
        Wne: *mut f32,
    );
}
extern "C" {
    pub fn zfeast_gcontour_(
        Emid: *mut f64,
        r: *mut f64,
        fpm2: *mut c_int,
        fpm17: *mut c_int,
        fpm19: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_rational_(
        Emin: *mut f64,
        Emax: *mut f64,
        fpm2: *mut c_int,
        fpm16: *mut c_int,
        fpm18: *mut c_int,
        Eig: *mut f64,
        M0: *mut c_int,
        f: *mut f64,
    );
}
extern "C" {
    pub fn sfeast_rational_(
        Emin: *mut f32,
        Emax: *mut f32,
        fpm2: *mut c_int,
        fpm16: *mut c_int,
        fpm18: *mut c_int,
        Eig: *mut f32,
        M0: *mut c_int,
        f: *mut f32,
    );
}
extern "C" {
    pub fn sfeast_rationalx_(
        Zne: *mut f32,
        Wne: *mut f32,
        fpm2: *mut c_int,
        Eig: *mut f32,
        M0: *mut c_int,
        f: *mut f32,
    );
}
extern "C" {
    pub fn zfeast_grational_(
        Emid: *mut f64,
        r: *mut f64,
        fpm2: *mut c_int,
        fpm17: *mut c_int,
        fpm19: *mut c_int,
        Eig: *mut f64,
        M0: *mut c_int,
        f: *mut f64,
    );
}
extern "C" {
    pub fn cfeast_grational_(
        Emid: *mut f32,
        r: *mut f32,
        fpm2: *mut c_int,
        fpm17: *mut c_int,
        fpm19: *mut c_int,
        Eig: *mut f32,
        M0: *mut c_int,
        f: *mut f32,
    );
}
extern "C" {
    pub fn zfeast_grationalx_(
        Zne: *mut f64,
        Wne: *mut f64,
        fpm2: *mut c_int,
        Eig: *mut f64,
        M0: *mut c_int,
        f: *mut f64,
    );
}
extern "C" {
    pub fn cfeast_grationalx_(
        Zne: *mut f32,
        Wne: *mut f32,
        fpm2: *mut c_int,
        Eig: *mut f32,
        M0: *mut c_int,
        f: *mut f32,
    );
}
extern "C" {
    pub fn dfeast_rationalx_(
        Zne: *mut f64,
        Wne: *mut f64,
        fpm2: *mut c_int,
        Eig: *mut f64,
        M0: *mut c_int,
        f: *mut f64,
    );
}
extern "C" {
    pub fn cfeast_gcontour_(
        Emid: *mut f32,
        r: *mut f32,
        fpm2: *mut c_int,
        fpm17: *mut c_int,
        fpm19: *mut c_int,
        Zne: *mut f32,
        Wne: *mut f32,
    );
}
extern "C" {
    #[doc = ""]
    pub fn feastinit(fpm: *mut c_int);
}
extern "C" {
    pub fn FEASTINIT(fpm: *mut c_int);
}
extern "C" {
    pub fn feast_init_driver(fpm: *mut c_int, N: *const c_int);
}
extern "C" {
    pub fn cfeast_customcontour(
        fpm2: *mut c_int,
        N: *const c_int,
        Nedge: *mut c_int,
        Tedge: *mut c_int,
        Zedge: *mut f32,
        Zne: *mut f32,
        Wne: *mut f32,
    );
}
extern "C" {
    pub fn zfeast_customcontour(
        fpm2: *mut c_int,
        N: *const c_int,
        Nedge: *mut c_int,
        Tedge: *mut c_int,
        Zedge: *mut f64,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_contour(
        Emin: *mut f64,
        Emax: *mut f64,
        fpm2: *mut c_int,
        fpm16: *mut c_int,
        fpm18: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn cfeast_contour(
        Emin: *mut f32,
        Emax: *mut f32,
        fpm2: *mut c_int,
        fpm16: *mut c_int,
        fpm18: *mut c_int,
        Zne: *mut f32,
        Wne: *mut f32,
    );
}
extern "C" {
    pub fn zfeast_gcontour(
        Emid: *mut f64,
        r: *mut f64,
        fpm2: *mut c_int,
        fpm17: *mut c_int,
        fpm19: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn cfeast_gcontour(
        Emid: *mut f32,
        r: *mut f32,
        fpm2: *mut c_int,
        fpm17: *mut c_int,
        fpm19: *mut c_int,
        Zne: *mut f32,
        Wne: *mut f32,
    );
}
extern "C" {
    pub fn dfeast_rational(
        Emin: *mut f64,
        Emax: *mut f64,
        fpm2: *mut c_int,
        fpm16: *mut c_int,
        fpm18: *mut c_int,
        Eig: *mut f64,
        M0: *mut c_int,
        f: *mut f64,
    );
}
extern "C" {
    pub fn sfeast_rational(
        Emin: *mut f32,
        Emax: *mut f32,
        fpm2: *mut c_int,
        fpm16: *mut c_int,
        fpm18: *mut c_int,
        Eig: *mut f32,
        M0: *mut c_int,
        f: *mut f32,
    );
}
extern "C" {
    pub fn dfeast_rationalx(
        Zne: *mut f64,
        Wne: *mut f64,
        fpm2: *mut c_int,
        Eig: *mut f64,
        M0: *mut c_int,
        f: *mut f64,
    );
}
extern "C" {
    pub fn sfeast_rationalx(
        Zne: *mut f32,
        Wne: *mut f32,
        fpm2: *mut c_int,
        Eig: *mut f32,
        M0: *mut c_int,
        f: *mut f32,
    );
}
extern "C" {
    pub fn zfeast_grational(
        Emid: *mut f64,
        r: *mut f64,
        fpm2: *mut c_int,
        fpm17: *mut c_int,
        fpm19: *mut c_int,
        Eig: *mut f64,
        M0: *mut c_int,
        f: *mut f64,
    );
}
extern "C" {
    pub fn cfeast_grational(
        Emid: *mut f32,
        r: *mut f32,
        fpm2: *mut c_int,
        fpm17: *mut c_int,
        fpm19: *mut c_int,
        Eig: *mut f32,
        M0: *mut c_int,
        f: *mut f32,
    );
}
extern "C" {
    pub fn zfeast_grationalx(
        Zne: *mut f64,
        Wne: *mut f64,
        fpm2: *mut c_int,
        Eig: *mut f64,
        M0: *mut c_int,
        f: *mut f64,
    );
}
extern "C" {
    pub fn cfeast_grationalx(
        Zne: *mut f32,
        Wne: *mut f32,
        fpm2: *mut c_int,
        Eig: *mut f32,
        M0: *mut c_int,
        f: *mut f32,
    );
}
extern "C" {
    #[doc = ""]
    pub fn dfeast_srci_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hrci_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        zAq: *mut f64,
        zSq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_srcix_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hrcix_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        zAq: *mut f64,
        zSq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_srci_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        qr: *mut f64,
        mode: *mut c_int,
        resr: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_grci_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_grci_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_srcix_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        qr: *mut f64,
        mode: *mut c_int,
        resr: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_grcix_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_grcix_(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_grcipevx_(
        ijob: *mut c_char,
        d: *mut c_int,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_grcipev_(
        ijob: *mut c_char,
        d: *mut c_int,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_srcipevx_(
        ijob: *mut c_char,
        d: *mut c_int,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_srcipev_(
        ijob: *mut c_char,
        d: *mut c_int,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    #[doc = ""]
    pub fn dfeast_srci(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_srcix(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hrci(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        zAq: *mut f64,
        zSq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hrcix(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        zAq: *mut f64,
        zSq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_srci(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        qr: *mut f64,
        mode: *mut c_int,
        resr: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_grci(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_grci(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_srcix(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        qr: *mut f64,
        mode: *mut c_int,
        resr: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_grcix(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_grcix(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn DFEAST_SRCI(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZFEAST_HRCI(
        ijob: *mut c_char,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        zAq: *mut f64,
        zSq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_grcipevx(
        ijob: *mut c_char,
        d: *mut c_int,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_grcipev(
        ijob: *mut c_char,
        d: *mut c_int,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_srcipevx(
        ijob: *mut c_char,
        d: *mut c_int,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_srcipev(
        ijob: *mut c_char,
        d: *mut c_int,
        N: *const c_int,
        Ze: *mut f64,
        work: *mut f64,
        workc: *mut f64,
        Aq: *mut f64,
        Sq: *mut f64,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    #[doc = ""]
    pub fn dfeast_sygvx_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_sygv_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_syevx_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_syev_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hegvx_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hegv_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_heevx_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_heev_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gegvx_(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gegv_(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_geevx_(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_geev_(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_sygvx_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_sygv_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_syevx_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_syev_(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gegvx_(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gegv_(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_geevx_(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_geev_(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_sypevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_sypev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hepevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hepev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gepevx_(
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gepev_(
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_sypevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_sypev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gepevx_(
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gepev_(
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    #[doc = ""]
    pub fn dfeast_sygvx(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_sygv(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_syevx(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_syev(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hegvx(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hegv(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_heevx(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_heev(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gegvx(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gegv(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_geevx(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_geev(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_sygvx(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_sygv(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_syevx(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_syev(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gegvx(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gegv(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_geevx(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_geev(
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn DFEAST_SYGV(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn DFEAST_SYEV(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZFEAST_HEGV(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZFEAST_HEEV(
        UPLO: *const c_char,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_sypevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_sypev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hepevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hepev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gepevx(
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gepev(
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_sypevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_sypev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gepevx(
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gepev(
        d: *mut c_int,
        N: *const c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    #[doc = ""]
    pub fn dfeast_sbgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_sbgv_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_sbevx_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_sbev_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hbgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hbgv_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hbevx_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hbev_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gbgvx_(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        kub: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gbgv_(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        kub: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gbevx_(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gbev_(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_sbgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_sbgv_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_sbevx_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_sbev_(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gbgvx_(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        kub: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gbgv_(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        kub: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gbevx_(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gbev_(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    #[doc = ""]
    pub fn dfeast_sbgvx(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_sbgv(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_sbevx(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_sbev(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hbgvx(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hbgv(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hbevx(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hbev(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn DFEAST_SBGV(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn DFEAST_SBEV(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZFEAST_HBGV(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZFEAST_HBEV(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gbgvx(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        kub: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gbgv(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        kub: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gbevx(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gbev(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_sbgvx(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_sbgv(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_sbevx(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_sbev(
        UPLO: *const c_char,
        N: *const c_int,
        kla: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gbgvx(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        kub: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gbgv(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        klb: *mut c_int,
        kub: *mut c_int,
        B: *const f64,
        LDB: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gbevx(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gbev(
        N: *const c_int,
        kla: *mut c_int,
        kua: *mut c_int,
        A: *const f64,
        LDA: *const c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    #[doc = ""]
    pub fn dfeast_scsrgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_scsrgv_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_scsrevx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_scsrev_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hcsrgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hcsrgv_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hcsrevx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hcsrev_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gcsrgvx_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gcsrgv_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gcsrevx_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gcsrev_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_scsrgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_scsrgv_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_scsrevx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_scsrev_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gcsrgvx_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gcsrgv_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gcsrevx_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gcsrev_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_scsrgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_scsrgv_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_scsrevx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_scsrev_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_hcsrgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_hcsrgv_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_hcsrevx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_hcsrev_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_gcsrgvx_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_gcsrgv_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_gcsrevx_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_gcsrev_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_scsrgvx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_scsrgv_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_scsrevx_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_scsrev_(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_gcsrgvx_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_gcsrgv_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_gcsrevx_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_gcsrev_(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_scsrpevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_scsrpev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hcsrpevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hcsrpev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gcsrpevx_(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gcsrpev_(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_scsrpevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_scsrpev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gcsrpevx_(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gcsrpev_(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_scsrpevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_scsrpev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_hcsrpevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_hcsrpev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_gcsrpevx_(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_gcsrpev_(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_scsrpevx_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_scsrpev_(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_gcsrpevx_(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_gcsrpev_(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    #[doc = ""]
    pub fn dfeast_scsrgvx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_scsrgv(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_scsrevx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_scsrev(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hcsrgvx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hcsrgv(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hcsrevx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hcsrev(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn DFEAST_SCSRGV(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn DFEAST_SCSREV(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZFEAST_HCSRGV(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZFEAST_HCSREV(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gcsrgvx(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gcsrgv(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gcsrevx(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gcsrev(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_scsrgvx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_scsrgv(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_scsrevx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_scsrev(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gcsrgvx(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gcsrgv(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gcsrevx(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gcsrev(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_scsrgvx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_scsrgv(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_scsrevx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_scsrev(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_hcsrgvx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_hcsrgv(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_hcsrevx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_hcsrev(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn DIFEAST_SCSRGV(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn DIFEAST_SCSREV(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZIFEAST_HCSRGV(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn ZIFEAST_HCSREV(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emin: *mut f64,
        Emax: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_gcsrgvx(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_gcsrgv(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_gcsrevx(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_gcsrev(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_scsrgvx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_scsrgv(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_scsrevx(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_scsrev(
        UPLO: *const c_char,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_gcsrgvx(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_gcsrgv(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        sb: *mut f64,
        isb: *mut c_int,
        jsb: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_gcsrevx(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_gcsrev(
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_scsrpevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_scsrpev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_hcsrpevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_hcsrpev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_gcsrpevx(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_gcsrpev(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zfeast_scsrpevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zfeast_scsrpev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn dfeast_gcsrpevx(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn dfeast_gcsrpev(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_scsrpevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_scsrpev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_hcsrpevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_hcsrpev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_gcsrpevx(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_gcsrpev(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn zifeast_scsrpevx(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn zifeast_scsrpev(
        UPLO: *const c_char,
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
extern "C" {
    pub fn difeast_gcsrpevx(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
        Zne: *mut f64,
        Wne: *mut f64,
    );
}
extern "C" {
    pub fn difeast_gcsrpev(
        d: *mut c_int,
        N: *const c_int,
        sa: *mut f64,
        isa: *mut c_int,
        jsa: *mut c_int,
        fpm: *mut c_int,
        epsout: *mut f64,
        loop_: *mut c_int,
        Emid: *mut f64,
        r: *mut f64,
        M0: *mut c_int,
        lambda: *mut f64,
        q: *mut f64,
        mode: *mut c_int,
        res: *mut f64,
        info: *mut c_int,
    );
}
